{"version":3,"sources":["components/Alert.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","className","style","height","alert","type","msg","TextForm","useState","text","setText","heading","id","rows","value","onChange","event","target","onClick","newText","toUpperCase","showAlert","toLowerCase","split","filter","element","length","App","setAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAEe,SAASA,EAAMC,GAC1B,OACI,qBAAKC,UAAU,iBAAiBC,MAAO,CAACC,OAAO,QAA/C,SACKH,EAAMI,OAAS,qBAAKH,UAAS,sBAAiBD,EAAMI,MAAMC,KAA7B,gBAAd,SACZ,iCAASL,EAAMI,MAAME,UCJtB,SAASC,EAASP,GAC7B,MAAwBQ,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA6BA,OACI,qCACI,gCACI,sBAAKT,UAAU,OAAf,UACI,6BAAKD,EAAMW,UACX,0BAAUV,UAAU,eAAeW,GAAG,8BAA8BC,KAAK,IAAIC,MAAOL,EAAMM,SARnF,SAACC,GACpBN,EAAQM,EAAMC,OAAOH,aASb,wBAAQb,UAAU,4BAA4BiB,QAlCpC,WAClB,IAAIC,EAAUV,EAAKW,cACnBV,EAAQS,GACJA,GACAnB,EAAMqB,UAAU,0BAA2B,YA8BvC,kCACA,wBAAQpB,UAAU,4BAA4BiB,QA3BpC,WAClB,IAAIC,EAAUV,EAAKa,cACnBZ,EAAQS,GACJA,GACAnB,EAAMqB,UAAU,0BAA2B,YAuBvC,kCACA,wBAAQpB,UAAU,4BAA4BiB,QApBjC,WAErBR,EADc,IAEVD,GACAT,EAAMqB,UAAU,gBAAiB,YAgB7B,2BAEJ,sBAAKpB,UAAU,iBAAf,UACI,+CAAkBQ,EAAKc,MAAM,KAAKC,QAAO,SAACC,GAAc,OAA0B,IAAnBA,EAAQC,UAAgBA,UACvF,oDAAuBjB,EAAKiB,gBClB7BC,MAtBf,WACE,MAA0BnB,mBAAS,MAAnC,mBAAOJ,EAAP,KAAcwB,EAAd,KAWA,OACE,gCACE,cAAC7B,EAAD,CAAOK,MAAOA,IACd,qBAAKH,UAAU,iBAAf,SACE,cAACM,EAAD,CAAUI,QAAQ,wBAAwBU,UAb9B,SAACQ,EAASxB,GAC1BuB,EAAS,CACPtB,IAAKuB,EACLxB,KAAMA,IAERyB,YAAW,WACTF,EAAS,QACR,eCHQG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f6297333.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div className=\"container my-2\" style={{height:\"40px\"}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} role=\"alert`}>\r\n                <strong>{props.alert.msg}</strong>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        if (newText) {\r\n            props.showAlert(\"Converted to uppercase.\", \"success\");\r\n        }\r\n    }\r\n\r\n    const handleLpClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        if (newText) {\r\n            props.showAlert(\"Converted to lowercase.\", \"success\");\r\n        }\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        if (text) {\r\n            props.showAlert(\"Text Cleared.\", \"success\");\r\n        }\r\n    }\r\n\r\n    const handleOnchange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"mb-3\">\r\n                    <h1>{props.heading}</h1>\r\n                    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\" value={text} onChange={handleOnchange}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLpClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <h6>No of words: {text.split(' ').filter((element) => { return element.length !== 0 }).length}</h6>\r\n                <h6>No of characters: {text.length}</h6>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500)\n  }\n  return (\n    <div>\n      <Alert alert={alert} />\n      <div className=\"container my-3\" >\n        <TextForm heading=\"Enter the text below.\" showAlert={showAlert} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}